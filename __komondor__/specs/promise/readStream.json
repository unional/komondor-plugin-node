{"expectation":"[{ type: 'function', name: 'construct', meta: { functionName: 'promiseStream' }, instanceId: 1 }, { type: 'function', name: 'invoke', payload: [], instanceId: 1, invokeId: 1 }, { type: 'function', name: 'return', instanceId: 1, invokeId: 1, returnType: 'promise', returnInstanceId: 1 }, { type: 'promise', name: 'construct', instanceId: 1 }, { type: 'promise', name: 'return', meta: { state: 'fulfilled' }, instanceId: 1, invokeId: 1, returnType: 'node/stream', returnInstanceId: 1 }, { type: 'node/stream', name: 'construct', instanceId: 1 }, { type: 'node/stream', name: 'invoke', payload: ['data'], meta: { site: ['on'] }, instanceId: 1, invokeId: 1 }, { type: 'node/stream', name: 'return', meta: { site: ['on'] }, instanceId: 1, invokeId: 1 }, { type: 'node/stream', name: 'invoke', payload: ['end'], meta: { site: ['on'] }, instanceId: 1, invokeId: 2 }, { type: 'node/stream', name: 'return', meta: { site: ['on'] }, instanceId: 1, invokeId: 2 }, { pass: true, satisfier: { test: function test(actual) { return exec(actual) === undefined; }, exec: function exec(actual) { if (Array.isArray(actual)) { var diff_1 = []; if (Array.isArray(expectation)) { var arrayEntryExps_1 = []; var exp = expectation.map(function (e) { if (arrayEntryExps_1.length >= 1) { return new (Or_1.Or.bind.apply(Or_1.Or, [void 0].concat(arrayEntryExps_1, [e])))(); } if (e instanceof ArrayEntryExpectation_1.ArrayEntryExpectation) { arrayEntryExps_1.push(e); } return e; }); var a_1 = 0; exp.forEach(function (e) { if (e === undefined) { a_1 = a_1 + 1; return; } diff_1.push.apply(diff_1, detectDiff(actual[a_1], e, [\"[\" + a_1 + \"]\"], a_1)); a_1 = a_1 + 1; }); } else if (typeof expectation === 'function') { diff_1.push.apply(diff_1, detectDiff(actual, expectation)); } else { actual.forEach(function (a, i) { diff_1.push.apply(diff_1, detectDiff(a, expectation, [\"[\" + i + \"]\"], i)); }); } return diff_1.length === 0 ? undefined : diff_1; } var diff = detectDiff(actual, expectation); return diff.length === 0 ? undefined : diff; } } }, { type: 'callback', name: 'invoke', payload: [], sourceType: 'node/stream', sourceInstanceId: 1, sourceInvokeId: 2, sourcePath: [1] }]","actions":[{"type":"function","name":"construct","meta":{"functionName":"promiseStream"},"instanceId":1},{"type":"function","name":"invoke","payload":[],"invokeId":1,"instanceId":1},{"type":"function","name":"return","payload":{},"invokeId":1,"instanceId":1,"returnType":"promise","returnInstanceId":1},{"type":"promise","name":"construct","instanceId":1},{"type":"promise","name":"return","payload":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":true,"endEmitted":true,"reading":false,"sync":false,"needReadable":false,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":false,"domain":null,"_events":{},"_eventsCount":2},"meta":{"state":"fulfilled"},"invokeId":1,"instanceId":1,"returnType":"node/stream","returnInstanceId":1},{"type":"node/stream","name":"construct","instanceId":1},{"type":"node/stream","name":"invoke","payload":["data",null],"meta":{"site":["on"]},"invokeId":1,"instanceId":1},{"type":"node/stream","name":"return","meta":{"site":["on"]},"invokeId":1,"instanceId":1},{"type":"node/stream","name":"invoke","payload":["end",null],"meta":{"site":["on"]},"invokeId":2,"instanceId":1},{"type":"node/stream","name":"return","meta":{"site":["on"]},"invokeId":2,"instanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[104]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[101]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[108]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[108]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[111]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[32]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[119]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[111]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[114]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[108]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[{"type":"Buffer","data":[100]}],"sourceInvokeId":1,"sourcePath":[1],"sourceInstanceId":1},{"type":"callback","name":"invoke","sourceType":"node/stream","payload":[],"sourceInvokeId":2,"sourcePath":[1],"sourceInstanceId":1}]}